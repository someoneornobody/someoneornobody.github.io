<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on 국내 이곳저곳 여행지 및 카페, 아이와 함께 갈만한 곳을 소개합니다.</title>
    <link>https://someoneornobody.github.io/categories/javascript/</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 04 Oct 2024 14:20:38 +0900</lastBuildDate><atom:link href="https://someoneornobody.github.io/categories/javascript/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[javascript] A 태그(Anchor) 에서의 href, onclick 사용</title>
      <link>https://someoneornobody.github.io/dev/javascript/use-href-onclick-into-anchor/</link>
      <pubDate>Fri, 04 Oct 2024 14:20:38 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/javascript/use-href-onclick-into-anchor/</guid>
      <description>안녕하세요. 이번에는 프로그래밍 관련 게시글을 하나 적어볼까 합니다. 아래 문제는 아주 오래전에 겪어봐서 알아두었던 건데 최근에 깜빡하고 다시 똑같은 실수를 범해서 그냥 다시 한번 참고차 남겨두려는 의미에서 포스팅을 해봅니다.
A 태그로 javascript function 을 호출하는 방법은 2가지가 있습니다.
&amp;lt;!-- case1 --&amp;gt; &amp;lt;a href=&amp;#34;javascript:callFunction();&amp;#34;&amp;gt;javascript function&amp;lt;/a&amp;gt; &amp;lt;!-- case2 --&amp;gt; &amp;lt;a href=&amp;#34;javascript:void(0);&amp;#34; onclick=&amp;#34;callFunction();&amp;#34;&amp;gt;onclick function&amp;lt;/a&amp;gt; 물론 위 처럼 그대로 다 적어두지 않고 bind 로 click 이벤트를 주도록 하는 등의 코딩이 가능 하겠지만 일반적으로는 위 처럼 쓰일 것입니다.</description>
    </item>
    
    <item>
      <title>[Javascript] 브라우저 뒤로가기 처리 (BFCache, Back-forward cache)</title>
      <link>https://someoneornobody.github.io/dev/javascript/bf-cache/</link>
      <pubDate>Tue, 19 Sep 2023 07:48:19 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/javascript/bf-cache/</guid>
      <description>BFCache ? BFCache 란 Back-forward Cache 의 약자로 브라우저가 현재 페이지의 상태를 저장하는 것을 말한다.
현재 페이지의 상태라 함은 페이지의 DOM상태, Javascript, Input, 스크롤 위치 등의 데이터가 포함될 수 있다.
사용자가 브라우저에서 뒤로가기 또는 앞으로 가기 버튼을 클릭 하였을 때 처음 이동하는 페이지보다 월등히 더 빠르게 렌더링 된 페이지를 볼 수 있는 이유는 이러한 BFCache 로 인해 캐싱된 페이지를 보기 때문이다.
사용자 관점에서는 매우 효과적이고 효율적인 기능이지만 개발자 입장에서는 상황에 따라 손이 한번 더 가는 경우가 발생한다.</description>
    </item>
    
  </channel>
</rss>
