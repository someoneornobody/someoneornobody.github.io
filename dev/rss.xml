<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devs on Someone or Nobody</title>
    <link>https://someoneornobody.github.io/dev/</link>
    <description></description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 16 Nov 2023 12:03:33 +0900</lastBuildDate><atom:link href="https://someoneornobody.github.io/dev/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Vue] 전역 변수 사용하기 (#2)</title>
      <link>https://someoneornobody.github.io/dev/vue/use-global-properties-second/</link>
      <pubDate>Thu, 16 Nov 2023 12:03:33 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/vue/use-global-properties-second/</guid>
      <description>[Vue] 전역 변수 사용하기 (https://someoneornobody.github.io/dev/vue/use-global-properties/) 의 후속편입니다.
이번에는 공통으로 사용되는 함수들을 모아 전역 변수로 선언한 후 해당 변수를 통해 함수를 호출하는 방법을 알아보도록 하겠습니다.
먼저 공통 함수들을 선언하는 파일을 utils.js 라고 명명하고 아래와 같이 작성합니다.
// utils.js export default { // 숫자 외 문자삭제 후 리턴 inputNumber: (v) =&amp;gt; { return v.replace(/[^0-9]/g, &amp;#39;&amp;#39;) } } 그리고 main.js 에서 utils.js 파일을 import 후 전역 변수에 $utils 라는 이름으로 등록합니다.
// main.</description>
    </item>
    
    <item>
      <title>[Vue] nextTick 활용 (#1)</title>
      <link>https://someoneornobody.github.io/dev/vue/nexttick/</link>
      <pubDate>Wed, 08 Nov 2023 13:18:38 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/vue/nexttick/</guid>
      <description>input 요소 처리 시 nextTick 이 사용 될 만한 예제에 대해 설명해 보겠습니다.
먼저 input 에 대한 입력 조건은 아래와 같습니다.
숫자만 입력 가능하다. 6자리 이상은 입력되지 않는다. 위에 대한 조건을 바탕으로 하는 기본 코드는 아래와 같습니다.
&amp;lt;template&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;birth&amp;#34; placeholder=&amp;#34;ex) 200414&amp;#34; v-model=&amp;#34;birth&amp;#34; /&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script setup&amp;gt; import {ref, watch} from &amp;#39;vue&amp;#39; const birth = ref(&amp;#39;&amp;#39;) watch(() =&amp;gt; birth.value, newValue =&amp;gt; { if (newValue.length &amp;gt; 6) { birth.value = birth.</description>
    </item>
    
    <item>
      <title>[Vue] import.meta.env.MODE 값 설정하기</title>
      <link>https://someoneornobody.github.io/dev/vue/set-env-mode/</link>
      <pubDate>Thu, 26 Oct 2023 10:37:09 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/vue/set-env-mode/</guid>
      <description>개발환경 현재 개발중인 환경은 아래와 같다
front framework: vue3 (v3.2.13) build tool: vite (v3.1.9) 상황 개발을 하다보면 local, dev, prod 와 같은 개발환경에 따라 다른 처리가 필요한 부분이 꼭 생기게 된다.
vue3, vite 를 사용하여 개발하는 지금, 이러한 처리가 필요한 부분이 발생하여 해당 환경에 맞게 처리 후
테스트 할 환경으로 빌드를 하기 위해 아래와 같이 빌드를 실행하였다.
npm run build --mode local 정상적으로 진행 될 거라 생각했지만 아래와 같은 오류가 발생하였다.</description>
    </item>
    
    <item>
      <title>[Vue] computed property 값 변경하기</title>
      <link>https://someoneornobody.github.io/dev/vue/setter-getter/</link>
      <pubDate>Thu, 19 Oct 2023 13:06:30 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/vue/setter-getter/</guid>
      <description>화면에서 computed 속성의 값을 변경 시킬 경우 발생하는 오류와 이에 대한 해결 방법을 이야기하고자 한다.
먼저, 아래의 소스를 보자.
&amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;p&amp;gt;computed 값: {{ compDefaultValue }}&amp;lt;/p&amp;gt; &amp;lt;button @click=&amp;#34;increase&amp;#34;&amp;gt;문구 변경&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; export default { data: () =&amp;gt; ({ defaultValue: 0 }), computed: { compDefaultValue() { return this.defaultValue } }, methods: { increase() { this.compDefaultValue = 1 } } } &amp;lt;/script&amp;gt; 위 소스에서 문구 변경을 클릭할 경우 호출되는 increase 함수에서 this.</description>
    </item>
    
    <item>
      <title>[Vue] Pinia Store 에서 vue-router 사용하기</title>
      <link>https://someoneornobody.github.io/dev/vue/router-use-in-pinia-store/</link>
      <pubDate>Wed, 04 Oct 2023 09:26:00 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/vue/router-use-in-pinia-store/</guid>
      <description>개요 pinia store 에서 vue-router 사용 시 undefined 로 인해 정상적인 동작을 하지않는 상황이 발생 사실 이건 당연한, 간단한 구조적 문제였는데.. 저와 같은 실수를 하는 사람이 없길 바라며 작성하는 게시글입니다.. 개발 환경 build tool: vite framework: vue3 state management: pinia 코드 main.js import { createApp } from &amp;#39;vue&amp;#39; import { createPinia } from &amp;#39;pinia&amp;#39; import App from &amp;#39;./App.vue&amp;#39; import router from &amp;#39;./router&amp;#39; const app = createApp(App) app.use(createPinia()) app.use(router) app.mount(&amp;#39;#app&amp;#39;) stores/common.</description>
    </item>
    
    <item>
      <title>[Mysql-Mariadb] datetime 에 공백 넣기(NO_ZERO_DATE, NO_ZERO_IN_DATE)</title>
      <link>https://someoneornobody.github.io/dev/db/mysql-mariadb-datetime-white-space/</link>
      <pubDate>Tue, 26 Sep 2023 09:40:29 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/db/mysql-mariadb-datetime-white-space/</guid>
      <description>MySQL 및 MariaDB에서 데이트타임 필드에 공백 입력 시 발생하는 에러 해결 방법 Mysql이나 Mariadb를 사용할 때 데이트타임 필드에 공백을 입력해야 하는 상황이 발생하는데 그때 공백이 올바르게 입력되어도 에러가 발생하는 경우가 있을 경우 해결하는 케이스 입니다.
에러 상황 다음과 같은 기존 쿼리에서 데이트타임 필드에 공백을 넣으면 문제가 없는 경우도 있지만 갑자기 에러가 발생할 수 있습니다.
UPDATE USER SET AGREE_DT = :AGREE_DT, AGREE_SEQ = :AGREE_SEQ WHERE USER_SEQ = :USER_SEQ 에러 내용: Error 1292: Incorrect datetime value: &#39;&#39; for column &#39;AGREE_DT&#39; at row 1</description>
    </item>
    
    <item>
      <title>[HUGO] 글작성, 문법, 이미지업로드 하기</title>
      <link>https://someoneornobody.github.io/dev/hugo/hugo-write-article/</link>
      <pubDate>Mon, 25 Sep 2023 07:11:39 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/hugo/hugo-write-article/</guid>
      <description>개요 본 게시물은 hugo 의 Mainroad 테마를 기준으로 작성되었습니다. 이는 아래 작성된 내용들이 환경이나 표준과 다를 수 있음을 의미합니다. 파일 생성 수행 경로: hugo 사이트 생성 경로 (hugo/my-site)
hugo new {경로/파일명.md} 를 통해 작성할 게시물 파일을 생성하는데, 이렇게 생성된 파일은
hugo/my-site/content
폴더 아래 자동으로 생성됩니다. 생성 된 파일은 hugo/my-site/archetypes/default.md 에 작성된 템플릿을 기반으로 기본적인 내용이 작성되어져 있습니다..
hugo new dev/hugo/hugo.md hugo/my-site/content/dev/hugo/hugo.md 에 파일 생성. 내용 작성 해당 md 파일에 게시할 내용을 markdown 문법으로 작성함으로써 글 작성에 대한건 사실 끝입니다.</description>
    </item>
    
    <item>
      <title>[Apache] 아파치 2.2.34 바이너리 설치</title>
      <link>https://someoneornobody.github.io/dev/server/apache-binary-install/</link>
      <pubDate>Wed, 20 Sep 2023 07:17:04 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/server/apache-binary-install/</guid>
      <description>개요 및 준비사항 - Apache 설치 시 OS에 필요한 라이브러리들이 없다고 가정하고(가끔 인프라쪽에 서버 생성 요청할때.. 정말 아무 라이브러리도 없는 쌩 서버만 주는 경우가 있죠..) , 필요한 라이브러리들 부터 순차적으로 설치 후 apache 를 설치하는 내용입니다.
- 서버 설치 환경은 CentOS 7.5 버전 입니다
Apache 소스 컴파일 설치 시 필요한 라이브러리 (괄호안의 숫자는 현 문서에서 다루는 버전입니다) apache (v2.2.34)
Apache Http server. 웹 서버. download: https://httpd.apache.org/download.cgi apr (v1.7.0)
Apache Portable Runtime 의 약자.</description>
    </item>
    
    <item>
      <title>[Javascript] 브라우저 뒤로가기 처리 (BFCache, Back-forward cache)</title>
      <link>https://someoneornobody.github.io/dev/javascript/bf-cache/</link>
      <pubDate>Tue, 19 Sep 2023 07:48:19 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/javascript/bf-cache/</guid>
      <description>BFCache ? BFCache 란 Back-forward Cache 의 약자로 브라우저가 현재 페이지의 상태를 저장하는 것을 말한다.
현재 페이지의 상태라 함은 페이지의 DOM상태, Javascript, Input, 스크롤 위치 등의 데이터가 포함될 수 있다.
사용자가 브라우저에서 뒤로가기 또는 앞으로 가기 버튼을 클릭 하였을 때 처음 이동하는 페이지보다 월등히 더 빠르게 렌더링 된 페이지를 볼 수 있는 이유는 이러한 BFCache 로 인해 캐싱된 페이지를 보기 때문이다.
사용자 관점에서는 매우 효과적이고 효율적인 기능이지만 개발자 입장에서는 상황에 따라 손이 한번 더 가는 경우가 발생한다.</description>
    </item>
    
    <item>
      <title>[MySQL/MariaDB] 명령어</title>
      <link>https://someoneornobody.github.io/dev/db/mysql-mariadb-commands/</link>
      <pubDate>Mon, 18 Sep 2023 11:22:47 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/db/mysql-mariadb-commands/</guid>
      <description>MySQL/MariaDB: 명령어 및 관리에 대한 내용 1. 연결 설정 1.1 루트 연결 루트 사용자로 연결하려면 MySQL bin 폴더로 이동하고 다음 명령을 실행한다.
./mysql -u root -p 1.2 사용자 목록 다음 SQL 쿼리로 사용자 및 해당 호스트 목록을 확인한다.
use mysql; select user, host from user; 1.3 비밀번호 변경 mysqladmin 명령을 사용하여 사용자의 비밀번호를 변경한다.
mysqladmin -uID -pOldPassword password NewPassword 2. 데이터베이스 작업 2.1 데이터베이스 목록 사용 가능한 데이터베이스 목록을 확인한다.</description>
    </item>
    
    <item>
      <title>[Vue] 전역 변수 사용하기 (#1)</title>
      <link>https://someoneornobody.github.io/dev/vue/use-global-properties/</link>
      <pubDate>Fri, 15 Sep 2023 09:50:33 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/vue/use-global-properties/</guid>
      <description>아래는vue3 에서 script setup 방식으로 전역변수를 사용하는 예제 입니다. 전역변수 설정 case 1 provide 를 사용하여 전역변수를 설정하는 방법. file: main.js ... const appTitle = &amp;#39;hello nobody&amp;#39; const app = createApp(app) .provide(&amp;#39;$title&amp;#39;, appTitle) .mount(&amp;#39;#app&amp;#39;) case 2 config.globalProperties 를 사용하는 방식으로 provide 와 동일하게 vue3 에서 전역 애플리케이션 인스턴스에 속성을 추가할 수 있는 기능. file: main.js ... const appTitle = &amp;#39;hello nobody&amp;#39; const app = createApp(app) ... app.config.globalProperties.$title = appTitle .</description>
    </item>
    
    <item>
      <title>[HUGO] Github 연동하기</title>
      <link>https://someoneornobody.github.io/dev/hugo/hugo-with-github/</link>
      <pubDate>Wed, 13 Sep 2023 08:12:02 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/hugo/hugo-with-github/</guid>
      <description>개요 HUGO 를 사용하여 SSG (Static Site Generators) 를 운영하는 대표적인 방법 중 하나는 github 저장소 를 이용하는 것입니다. github 를 통하여 서비스 시 별도의 비용도 발생하지 않고 다양한 플러그인들 지원을 통해 여러가지 기능을 손쉽게 적용 할 수 있는 장점이 있습니다.
아래는 HUGO 를 통해 github 에 게시글을 작성하고 노출 시키는방법에 대해 설명해 보고자 합니다.
git repository 생성 먼저 github 에 가입 후 아래와 같이 2개의 repository 를 생성하도록 합니다.</description>
    </item>
    
    <item>
      <title>[HUGO] 시작하기</title>
      <link>https://someoneornobody.github.io/dev/hugo/hugo-start/</link>
      <pubDate>Mon, 11 Sep 2023 15:04:49 +0900</pubDate>
      
      <guid>https://someoneornobody.github.io/dev/hugo/hugo-start/</guid>
      <description>HUGO ? HUGO 는 GO 프로그래밍 언어로 작성된 오픈 소스 정적 사이트 (Static Site Generators) 생성기 입니다.
정적 사이트 생성기란 서버측 처리없이 HTML, CSS, Javascript 파일로 제공되는 웹 사이트로 다양한 플랫폼에서 빠르고 안전하며 쉽게 호스팅 할 수 있습니다.
다양한 케이스가 있겠지만 대표적인 방법으로는 github 저장소를 이용하여 콘텐츠 생성 및 호스팅을 하는 방법이 있습니다.
아래 내용은 macOS 를 기준으로 작성 된 문서입니다 설치 brew 를 사용하여 hugo 를 설치합니다 # 최초 설치 시 brew install hugo # 설치확인 hugo version 다음 단계부터는 hugo 관련 파일들이 생성되기 때문에 작업 경로(실제로 hugo 사이트를 생성하고 관리할 경로) 로 이동해서 수행합니다 사이트 생성 신규 사이트 생성</description>
    </item>
    
  </channel>
</rss>
